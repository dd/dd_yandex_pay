{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"DD Yandex Pay <p>Wrapper for Yandex Pay API.</p> <p>For a detailed description of how to work with the client, read the usage section in the documentation.</p> <p>You can leave any suggestions for the development of the project in discussions on GitHub.</p> <p>If you come across a bug, please open an issue.</p> <p>If you would like to contribute to the development of the project, please read the contribution section in the documentation.</p>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>Home</li> <li>Usage<ul> <li>Getting started</li> <li>Client</li> </ul> </li> <li>Code Reference</li> <li>Contributing<ul> <li>Introduction</li> <li>Documentations<ul> <li>Examples</li> </ul> </li> <li>Tests</li> </ul> </li> <li>Changelog</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#020-2023-10-10","title":"0.2.0 (2023-10-10)","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>\u2728 (client): Method for getting order data [ef73e56]</li> <li>\u2705 (tests): Improved order creation tests [d7e792e]</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>\ud83d\udd27 (CI): Corrected the release of documentation [8759de8,42a5b0c,3e3597e]</li> <li>\u267b\ufe0f (chore): Changed the client api [10d678d]</li> <li>\ud83d\udd27 (chore): Added support for python 3.12 [7e5f211]</li> <li>\u2b06\ufe0f (chore): Updated requirements [575620b]</li> </ul>"},{"location":"changelog/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>\ud83d\udca1 (docs): Changed comment [5b8312e]</li> <li>\ud83d\udcdd (docs): Update documentations [094c149,6cf0a02]</li> </ul>"},{"location":"changelog/#010-2023-09-28","title":"0.1.0 (2023-09-28)","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>\u2728 (client): Method for creating a payment link [1e047a8]</li> <li>\u2705 (tests): Tests added [4d910e1]</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>\ud83d\udd27 (tests): Added action for running tests in github [137a9b1]</li> <li>\ud83d\udd27 (chore): Configured the package config, linter and development environment [7dbbf26,32cf2f1]</li> </ul>"},{"location":"changelog/#miscellaneous_1","title":"Miscellaneous","text":"<ul> <li>\ud83d\ude80 (build): Action config with build and publication [f19a7f6]</li> <li>\ud83d\udcdd (docs): Added and configured documentation [e709ad4,e1035a7,5d1aef6,144f350,6b0127a,dac80f7,466c7a6]</li> <li>\ud83d\ude48 (chore): Added .gitignore [ab3afef,95bc08e]</li> </ul>"},{"location":"dev/contributing/","title":"Contributing","text":"<p>Please don't be shy - comment, discuss and suggest whatever you think is important in the discussions on github, if you notice a bug please describe it in issues, and if you decide to contribute to the development of the project, feel free to send pull request, and if possible, read further during development this section.</p> <p>When developing, modifying and fixing a feature, please fill in and correct all annotations and docstrings in the code, and also try, if possible, to fill in / supplement the description of the functionality and its use in the section of the documentation, also add tests for new or fixed functionality, read more below:</p>"},{"location":"dev/contributing/#environment","title":"Environment","text":"<p>To work, you need a configured environment, for this there is the following script:</p> <pre><code>$ hatch run init\n</code></pre> <p>Note</p> <p>All development is done using hatch. To work with it, you will need to install it globally, I advise you to do this using pipx.</p> <p>This script will completely configure the environment - configure gitflow, connect git hooks, and install and configure a virtual environment, to run python in this environment, run the following command:</p> <pre><code>$ hatch run ipython\n</code></pre>"},{"location":"dev/contributing/#git-flow","title":"Git flow","text":"<p>As you develop and refine, please try to keep your repository consistent with gitflow.</p> <p>Question</p> <p>Probably this point will change, the library is actively developed, I took this approach as a familiar one, however, I think that it will need to be changed. If you have any suggestions I'll be happy to listen.</p>"},{"location":"dev/contributing/#tests","title":"Tests","text":"<p>When working on a project, it is extremely important to cover everything with tests in order to avoid problems and errors in the code. Read about tests in the corresponding section.</p>"},{"location":"dev/contributing/#documentation","title":"Documentation","text":"<p>The documentation is implemented using the mkdocs generator and the mkdocs material theme. When working on library functionality, it is important to expand the usage section. For more information about developing documentation, see the corresponding section.</p>"},{"location":"dev/contributing/#versioning","title":"Versioning","text":"<p>Version according to semver.</p> <p>To update the version, use hatch version</p> <p>show current version:</p> <pre><code>$ hatch version\n1.0.0a0\n</code></pre> <p>update patch and beta version from <code>1.0.0a0</code> to <code>1.0.1b0</code></p> <pre><code>$ hatch version patch,beta\nOld: 1.0.0a0\nNew: 1.0.1b0\n</code></pre>"},{"location":"dev/contributing/#commit-message-convention","title":"Commit message convention","text":"<p>To write a commit, we adhere to the Conventional Commits specification, as well as gitmoji as a special case of conventional commits. You can use gitmoji-cli for this process. This is necessary for the automatic generation of the changelog.</p> <p>Info</p> <p>The list of emoji needs to be improved, now it is bloated and there are controversial points like  which means deleting the code...</p>"},{"location":"dev/contributing/#changelog-generation","title":"Changelog generation","text":"<p>You can generate a Changelog with the following command using gitmoji-changelog:</p> <pre><code>$ hatch run changelog-update\n</code></pre>"},{"location":"dev/contributing/#building-and-publishing","title":"Building and publishing","text":"<p>For the build, hatch is used and to build the library there is the following command:</p> <pre><code>$ hatch build\n</code></pre> <p>This command is provided by hatch and for more details on how it works, it is better to look at the hatch documentation.</p> <p>The build and upload of releases is implemented in GitHub Actions and occurs automatically when pushing release tags like <code>v*</code>.</p> <p>More details on how to set up a build and upload can be found in the workflow config.</p>"},{"location":"dev/tests/","title":"Tests","text":"<p>The project uses pytest for testing, as well as set up coverage tests using pytest-cov, it is highly recommended for review.</p>"},{"location":"dev/tests/#usage","title":"Usage","text":"<p>You can run tests in a development environment with the following command:</p> <pre><code>$ hatch run test:check\n</code></pre> <p>A matrix for a set of python and django versions is also configured in hatch, you can see more about this in the settings in the <code>pyproject.toml</code> file, you can run the entire test matrix with the hatch script:</p> <pre><code>$ hatch run mtest:check\n</code></pre>"},{"location":"dev/tests/#autotests","title":"Autotests","text":"<p>Tests are automatically processed when pushing to <code>main</code>, <code>dev</code> and release branches <code>release/*</code>. See workflow config for details.</p> <p>In the process, test results are uploaded to codecov.io.</p>"},{"location":"dev/docs/","title":"Documentation","text":"<p>To develop documentation, use mkdocs with the theme mkdocs-material.</p> <p>Sources for documentation generation parse mkdocstring-python which can handle multiple formats, we use Google-style (this only applies to docstrings), but not pure, and its variation is napoleon (But of course this is a debatable issue, and we can change if there are suggestions).</p>"},{"location":"dev/docs/#local-development","title":"Local development","text":"<p>In the simplest case, running a local server with development documentation would look like this:</p> <pre><code>$ hatch run docs:serve\n</code></pre>"},{"location":"dev/docs/#configuration","title":"Configuration","text":"<p>There are several options for documentation configuration:</p>"},{"location":"dev/docs/#ddyp_mkdocs_code_parce_enabled","title":"<code>DDYP_MKDOCS_CODE_PARCE_ENABLED</code>","text":"<p><code>default: true</code></p> <p>Enabling / disabling the output of sources in the documentation \"on-the-fly\" (organized based on the example from the mkdocstrings documentation).</p>"},{"location":"dev/docs/#ddyp_mkdocs_code_parce_source_path","title":"<code>DDYP_MKDOCS_CODE_PARCE_SOURCE_PATH</code>","text":"<p><code>default: \"dd_yandex_pay\"</code></p> <p>A directory with sources for \"on-the-fly\" generation.</p>"},{"location":"dev/docs/#ddyp_mkdocs_code_parce_docs_path","title":"<code>DDYP_MKDOCS_CODE_PARCE_DOCS_PATH</code>","text":"<p><code>default: \"reference\"</code></p> <p>Documentation directory for displaying \"on-the-fly\" generated source documentation.</p>"},{"location":"dev/docs/#ddyp_mkdocs_code_parce_show_nav","title":"<code>DDYP_MKDOCS_CODE_PARCE_SHOW_NAV</code>","text":"<p><code>default: false</code></p> <p>Parameter for debugging generated \"on-the-fly\" navigation.</p>"},{"location":"dev/docs/#ddyp_mkdocs_enabled_git_revision_date","title":"<code>DDYP_MKDOCS_ENABLED_GIT_REVISION_DATE</code>","text":"<p><code>default: true</code></p> <p>Option to enable/disable modification dates for documentation files. It will be useful to disable it when developing locally so that the console is not clogged with errors.</p>"},{"location":"dev/docs/#ddyp_mkdocs_offline","title":"<code>DDYP_MKDOCS_OFFLINE</code>","text":"<p><code>default: false</code></p> <p>Parameter for building documentation into a build working from a folder, without the need to start the server. read more about the mechanism here.</p>"},{"location":"dev/docs/#ddyp_mkdocs_enable_minify","title":"<code>DDYP_MKDOCS_ENABLE_MINIFY</code>","text":"<p><code>default: true</code></p> <p>Parameter to enable plugin minify minifying html, js and css when generating documentation.</p> <p>When working with local server documentation, this option is disabled.</p>"},{"location":"dev/docs/#building-and-publishing","title":"Building and publishing","text":"<p>There is a separate <code>hatch run docs:build</code> command for building documentation.</p> <p>But before pushing the updated documentation, please run the <code>hatch run docs:build-check</code> command, it will build the documentation with rigth parameters and check the links for broken ones.</p> <p>Documentation is collected in GitHub Actions and uploaded to the gh-pages branch and published using GitHub Pages.</p> <p>The documentation is automatically collected and rolled out when pushing the release tag (<code>v*</code>), and when pushing to the <code>dev</code> branch, the dev version of the documentation is updated.</p> <p>You can learn more about these processes in the release and dev workflow configs.</p>"},{"location":"dev/docs/examples/","title":"Examples of blocks for writing documentation","text":"<p>A collection of examples of non-obvious blocks that can be used when writing documentation.</p>"},{"location":"dev/docs/examples/#admonitions","title":"Admonitions","text":"<p>docs | supported types</p> CodePreview <pre><code>!!! note\n\n\tYou should note that the title will be automatically capitalized.\n</code></pre> <p>Note</p> <p>You should note that the title will be automatically capitalized.</p>"},{"location":"dev/docs/examples/#inline-usage","title":"inline usage","text":"inline end inline <p>Lorem ipsum</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>!!! info inline end \"Lorem ipsum\"\n\n\tLorem ipsum dolor sit amet, consectetur\n\tadipiscing elit. Nulla et euismod nulla.\n\tCurabitur feugiat, tortor non consequat\n\tfinibus, justo purus auctor massa, nec\n\tsemper lorem quam in massa.\n</code></pre> <p>Use <code>inline end</code> to align to the right (left for rtl languages).</p> <p>Lorem ipsum</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>!!! info inline \"Lorem ipsum\"\n\n\tLorem ipsum dolor sit amet, consectetur\n\tadipiscing elit. Nulla et euismod nulla.\n\tCurabitur feugiat, tortor non consequat\n\tfinibus, justo purus auctor massa, nec\n\tsemper lorem quam in massa.\n</code></pre> <p>Use <code>inline</code> to align to the left (right for rtl languages).</p>"},{"location":"dev/docs/examples/#collapsible-blocks","title":"Collapsible blocks","text":"<p>docs</p> <pre><code>???+ note \"Open styled details\"\n\n\t??? danger \"Nested details!\"\n\t\tAnd more content again.\n</code></pre> Open styled details Nested details! <p>And more content again.</p>"},{"location":"dev/docs/examples/#footnotes","title":"Footnotes","text":"<p>docs</p> <pre><code>Footnotes[^1] have a label[^test-label] and the footnote's content.\n\n[^1]: This is a footnote content.\n[^test-label]: A footnote on the label: \"test-label\".\n</code></pre> <p>Footnotes<sup>1</sup> have a label<sup>2</sup> and the footnote's content.</p>"},{"location":"dev/docs/examples/#highlight","title":"Highlight","text":"<p>docs</p> CodePreview <pre><code>```console linenums=\"42\" hl_lines=\"1 4-6\"\n$ echo hello world!\nhello world!\n\n$ git clone git@github.com:dd/dd_yandex_pay.git\n$ cd dd_yandex_pay\n$ hatch run docs:serve\nINFO     -  Building documentation...\nINFO     -  Cleaning site directory\nINFO     -  mkdocstrings_handlers: Formatting signatures requires Black to be\n\t\t\tinstalled.\nINFO     -  Documentation built in 1.96 seconds\nINFO     -  [02:05:37] Watching paths for changes: 'docs/src', 'mkdocs.yml',\n\t\t\t'docs/theme', 'dd_yandex_pay', 'README.md'\nINFO     -  [02:05:37] Serving on http://127.0.0.1:7000/\n```\n</code></pre> <pre><code>```pycon\n&gt;&gt;&gt; for word in (\"Hello\", \"mkdocstrings!\"):\n...     print(word, end=\" \")\n...\nHello mkdocstrings!\n```\n</code></pre> <pre><code>$ echo hello world!\nhello world!\n\n$ git clone git@github.com:dd/dd_yandex_pay.git\n$ cd dd_yandex_pay\n$ hatch run docs:serve\nINFO     -  Building documentation...\nINFO     -  Cleaning site directory\nINFO     -  mkdocstrings_handlers: Formatting signatures requires Black to be\n\t\t\tinstalled.\nINFO     -  Documentation built in 1.96 seconds\nINFO     -  [02:05:37] Watching paths for changes: 'docs/src', 'mkdocs.yml',\n\t\t\t'docs/theme', 'dd_yandex_pay', 'README.md'\nINFO     -  [02:05:37] Serving on http://127.0.0.1:7000/\n</code></pre> <pre><code>&gt;&gt;&gt; for word in (\"Hello\", \"mkdocstrings!\"):\n...     print(word, end=\" \")\n...\nHello mkdocstrings!\n</code></pre>"},{"location":"dev/docs/examples/#inline","title":"Inline","text":"<p>docs</p> <pre><code>`#!console $ python3 -c \"import this\"`\n</code></pre> <p><code>$ python3 -c \"import this\"</code></p> <pre><code>`#!python3 import this`\n</code></pre> <p><code>import this</code></p>"},{"location":"dev/docs/examples/#annotates","title":"Annotates","text":"<p>docs</p> <pre><code>```python\nimport this # (1)\n```\n\n1.  :fontawesome-brands-python: Simple is better than complex.\n</code></pre> <pre><code>import this # (1)\n</code></pre> <ol> <li> Simple is better than complex.</li> </ol>"},{"location":"dev/docs/examples/#diagrams","title":"Diagrams","text":"<p>docs</p> <pre><code>```mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"dev/docs/examples/#content-tabs","title":"Content tabs","text":"<p>docs</p> <pre><code>=== \"Tab 1\"\n\tMarkdown **content**.\n\n\tMultiple paragraphs.\n\n=== \"Tab 2\"\n\tMore Markdown **content**.\n\n\t- list item a\n\t- list item b\n</code></pre> Tab 1Tab 2 <p>Markdown content.</p> <p>Multiple paragraphs.</p> <p>More Markdown content.</p> <ul> <li>list item a</li> <li>list item b</li> </ul>"},{"location":"dev/docs/examples/#smart-symbols","title":"Smart Symbols","text":"<p>docs</p> Markdown Result Markdown Result <code>(tm)</code> \u2122 <code>&lt;--</code> \u2190 <code>(c)</code> \u00a9 <code>&lt;--&gt;</code> \u2194 <code>(r)</code> \u00ae <code>=/=</code> \u2260 <code>c/o</code> \u2105 <code>1/4, etc.</code> \u00bc, etc. <code>+/-</code> \u00b1 <code>1st 2nd etc.</code> 1<sup>st</sup> 2<sup>nd</sup> etc. <code>--&gt;</code> \u2192"},{"location":"dev/docs/examples/#keys","title":"Keys","text":"<p>docs</p> <pre><code>++ctrl+alt+delete++\n</code></pre> <p>Ctrl+Alt+Del</p>"},{"location":"dev/docs/examples/#icons-and-emojis","title":"Icons and Emojis","text":"<p>docs | icon search</p> <pre><code>:fontawesome-brands-twitter:{ .twitter } :smile: :heart: :thumbsup:\n</code></pre> <p> </p>"},{"location":"dev/docs/examples/#tooltips","title":"Tooltips","text":"<p>docs</p> <pre><code>[Hover me](https://example.com \"I'm a tooltip!\")\n</code></pre> <p>Hover me</p>"},{"location":"dev/docs/examples/#lists","title":"Lists","text":"<p>docs</p> CodePreview <pre><code>- [X] item 1\n\t* [X] item A\n\t* [ ] item B\n\t\tmore text\n\t\t+ [x] item a\n\t\t+ [ ] item b\n\t\t+ [x] item c\n\t* [X] item C\n- [ ] item 2\n- [ ] item 3\n</code></pre> <ul> <li> item 1<ul> <li> item A</li> <li> item B     more text<ul> <li> item a</li> <li> item b</li> <li> item c</li> </ul> </li> <li> item C</li> </ul> </li> <li> item 2</li> <li> item 3</li> </ul>"},{"location":"dev/docs/examples/#tables","title":"Tables","text":"<p>docs</p> CodePreview <pre><code>First Header | Second Header\n------------ | -------------\nContent Cell | Content Cell\nContent Cell | Content Cell\n</code></pre> First Header Second Header Content Cell Content Cell Content Cell Content Cell <ol> <li> <p>This is a footnote content.\u00a0\u21a9</p> </li> <li> <p>A footnote on the label: \"test-label\".\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>_init_.py</li> <li>constants.py</li> <li>exceptions.py</li> <li>yp_client.py</li> </ul>"},{"location":"reference/dd_yandex_pay/__init__/","title":"__init__.py","text":""},{"location":"reference/dd_yandex_pay/__init__/#dd_yandex_pay","title":"dd_yandex_pay","text":""},{"location":"reference/dd_yandex_pay/__init__/#dd_yandex_pay.__version__","title":"__version__  <code>module-attribute</code>","text":"<pre><code>__version__ = '0.2.0'\n</code></pre> <p>Version according to semver.</p> <p>To update the version, use hatch version</p> <p>show current version:</p> <pre><code>$ hatch version\n1.0.0a0\n</code></pre> <p>update patch and beta version from <code>1.0.0a0</code> to <code>1.0.1b0</code></p> <pre><code>$ hatch version patch,beta\nOld: 1.0.0a0\nNew: 1.0.1b0\n</code></pre>"},{"location":"reference/dd_yandex_pay/constants/","title":"constants.py","text":""},{"location":"reference/dd_yandex_pay/constants/#dd_yandex_pay.constants","title":"dd_yandex_pay.constants","text":""},{"location":"reference/dd_yandex_pay/constants/#dd_yandex_pay.constants.BASE_URL_PRODUCTION","title":"BASE_URL_PRODUCTION  <code>module-attribute</code>","text":"<pre><code>BASE_URL_PRODUCTION: Final[\n    str\n] = \"https://pay.yandex.ru/api/merchant/\"\n</code></pre> <p>\u0411\u043e\u0435\u0432\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440</p>"},{"location":"reference/dd_yandex_pay/constants/#dd_yandex_pay.constants.BASE_URL_SANDBOX","title":"BASE_URL_SANDBOX  <code>module-attribute</code>","text":"<pre><code>BASE_URL_SANDBOX: Final[\n    str\n] = \"https://sandbox.pay.yandex.ru/api/merchant/\"\n</code></pre> <p>\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0440\u0435\u0434\u0430</p>"},{"location":"reference/dd_yandex_pay/constants/#dd_yandex_pay.constants.PAYMENT_METHODS_CARD","title":"PAYMENT_METHODS_CARD  <code>module-attribute</code>","text":"<pre><code>PAYMENT_METHODS_CARD: Final[str] = 'CARD'\n</code></pre> <p>\u041a\u043e\u0434 \u043c\u0435\u0442\u043e\u0434\u0430 \u043e\u043f\u043b\u0430\u0442\u044b \u041a\u0430\u0440\u0442\u043e\u0439</p>"},{"location":"reference/dd_yandex_pay/constants/#dd_yandex_pay.constants.PAYMENT_METHODS_SPLIT","title":"PAYMENT_METHODS_SPLIT  <code>module-attribute</code>","text":"<pre><code>PAYMENT_METHODS_SPLIT: Final[str] = 'SPLIT'\n</code></pre> <p>\u041a\u043e\u0434 \u043c\u0435\u0442\u043e\u0434\u0434\u0430 \u043e\u043f\u043b\u0430\u0442\u044b \u042f\u043d\u0434\u0435\u043a\u0441 \u0421\u043f\u043b\u0438\u0442\u043e\u043c</p>"},{"location":"reference/dd_yandex_pay/exceptions/","title":"exceptions.py","text":""},{"location":"reference/dd_yandex_pay/exceptions/#dd_yandex_pay.exceptions","title":"dd_yandex_pay.exceptions","text":""},{"location":"reference/dd_yandex_pay/exceptions/#dd_yandex_pay.exceptions.BaseYPError","title":"BaseYPError","text":"<pre><code>BaseYPError(\n    message: Optional[str] = None,\n    code: Optional[str] = None,\n)\n</code></pre> <p>             Bases: <code>Exception</code></p> <p>Base DD Yandex Pay Exception.</p> Source code in <code>dd_yandex_pay/exceptions.py</code> <pre><code>def __init__(self, message: Optional[str] = None, code: Optional[str] = None):\n    self.code = code or self.default_code\n    self.message = message or self.default_message\n    super().__init__(f\"Error {self.code}: {self.message}\")\n</code></pre>"},{"location":"reference/dd_yandex_pay/exceptions/#dd_yandex_pay.exceptions.YandexPayAPIError","title":"YandexPayAPIError","text":"<pre><code>YandexPayAPIError(\n    response: Response,\n    message: Optional[str] = None,\n    code: Optional[str] = None,\n)\n</code></pre> <p>             Bases: <code>BaseYPError</code></p> <p>General Yandex Pay API Exception.</p> Source code in <code>dd_yandex_pay/exceptions.py</code> <pre><code>def __init__(\n    self,\n    response: Response,\n    message: Optional[str] = None,\n    code: Optional[str] = None,\n):\n    self.response = response\n    super().__init__(message, code)\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/","title":"yp_client.py","text":""},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client","title":"dd_yandex_pay.yp_client","text":""},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient","title":"YandexPayClient","text":"<pre><code>YandexPayClient(\n    api_key: str,\n    base_url: Optional[str] = BASE_URL_PRODUCTION,\n    timeout: Optional[Union[float, int, tuple]] = (3, 10),\n    deadline: Optional[int] = 10 * 1000,\n)\n</code></pre> <p>\u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0431\u0451\u0440\u0442\u043a\u0430 \u0434\u043b\u044f Yandex Pay API.</p> <p>Attributes:</p> <ul> <li> <code>api_key</code>         \u2013          <p>\u041a\u043b\u044e\u0447\u0438 Yandex Pay Merchant API.</p> </li> <li> <code>base_url</code>         \u2013          <p>\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 Yandex Pay API.</p> </li> <li> <code>timeout</code>         \u2013          <p>\u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439 \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f requests.</p> </li> <li> <code>deadline</code>         \u2013          <p>\u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439 \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445 \u0434\u043b\u044f \u044f\u043d\u0434\u0435\u043a\u0441.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def __init__(\n    self,\n    api_key: str,\n    base_url: Optional[str] = BASE_URL_PRODUCTION,\n    timeout: Optional[Union[float, int, tuple]] = (3, 10),\n    deadline: Optional[int] = 10 * 1000,\n):\n    \"\"\"\n    Attributes:\n        api_key: \u041a\u043b\u044e\u0447\u0438 [Yandex Pay Merchant API](https://console.pay.yandex.ru/web/account/settings/online).\n        base_url: \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 Yandex Pay API.\n        timeout: \u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439 \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f [requests](https://requests.readthedocs.io/en/latest/user/advanced/#timeouts).\n        deadline: \u0414\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0439 \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u043c\u0438\u043b\u043b\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445 \u0434\u043b\u044f [\u044f\u043d\u0434\u0435\u043a\u0441](https://pay.yandex.ru/ru/docs/custom/backend/yandex-pay-api/).\n    \"\"\"\n\n    self.api_key = api_key\n    self.base_url = base_url\n    self.default_timeout = timeout\n    self.default_deadline = deadline\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient.get_headers","title":"get_headers","text":"<pre><code>get_headers(**custom: dict) -&gt; dict\n</code></pre> <p>\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.</p> <p>Attributes:</p> <ul> <li> <code>custom</code>         \u2013          <p>\u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 (\u0442\u0430\u043a \u0436\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438).</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dict</code>         \u2013          <p>\u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def get_headers(self, **custom: dict) -&gt; dict:\n    \"\"\"\n    \u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n    Attributes:\n        custom: \u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 (\u0442\u0430\u043a \u0436\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0436\u043d\u043e\n            \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438).\n\n    Returns:\n        \u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438.\n    \"\"\"\n\n    return {\n        \"Authorization\": f\"Api-Key {self.api_key}\",\n        \"X-Request-Id\": str(uuid.uuid4()),\n        \"X-Request-Timeout\": str(self.default_deadline),\n        # \"X-Request-Attempt\": 1, ???\n        **custom,\n    }\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient.get_url","title":"get_url","text":"<pre><code>get_url(resourse: str) -&gt; str\n</code></pre> <p>\u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a API.</p> <p>Attributes:</p> <ul> <li> <code>resourse</code>         \u2013          <p>\u0420\u0435\u0441\u0443\u0440\u0441 \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>str</code>         \u2013          <p>\u0410\u0434\u0440\u0435\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def get_url(self, resourse: str) -&gt; str:\n    \"\"\"\n    \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a API.\n\n    Attributes:\n        resourse: \u0420\u0435\u0441\u0443\u0440\u0441 \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441.\n\n    Returns:\n        \u0410\u0434\u0440\u0435\u0441 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n    \"\"\"\n\n    return urllib.parse.urljoin(self.base_url, resourse)\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient.request","title":"request","text":"<pre><code>request(\n    method: str,\n    url: str,\n    headers: Optional[dict] = None,\n    **kwargs: dict\n) -&gt; requests.Response\n</code></pre> <p>\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a Yandex Pay API.</p> <p>Attributes:</p> <ul> <li> <code>method</code>         \u2013          <p>\u041c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.</p> </li> <li> <code>url</code>         \u2013          <p>\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441.</p> </li> <li> <code>headers</code>         \u2013          <p>\u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438.</p> </li> <li> <code>kwargs</code>         \u2013          <p>\u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Response</code>         \u2013          <p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def request(\n    self,\n    method: str,\n    url: str,\n    headers: Optional[dict] = None,\n    **kwargs: dict,\n) -&gt; requests.Response:\n    \"\"\"\n    \u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a Yandex Pay API.\n\n    Attributes:\n        method: \u041c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n        url: \u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441.\n        headers: \u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438.\n        kwargs: \u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438.\n\n    Returns:\n        \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442.\n    \"\"\"\n\n    kwargs.setdefault(\"timeout\", self.default_timeout)\n    kwargs[\"headers\"] = self.get_headers(**(headers or {}))\n    response = requests.request(method, url, **kwargs)\n    return response\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient.response_handler","title":"response_handler","text":"<pre><code>response_handler(\n    response: requests.Response,\n    check_data_availability: Optional[bool] = False,\n) -&gt; dict\n</code></pre> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u0430.</p> <p>Attributes:</p> <ul> <li> <code>response</code>         \u2013          <p>\u041e\u0442\u0432\u0435\u0442 API Yandex Pay.</p> </li> <li> <code>check_data_availability</code>         \u2013          <p>\u0424\u043b\u0430\u0433, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 <code>data</code> \u0432 \u043e\u0442\u0432\u0435\u0442\u0435.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dict</code>         \u2013          <p>\u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 API.</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>HTTPError</code>           \u2013          <p>HTTP Errors.</p> </li> <li> <code>YandexPayAPIError</code>           \u2013          <p>API Errors.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def response_handler(\n    self,\n    response: requests.Response,\n    check_data_availability: Optional[bool] = False,\n) -&gt; dict:\n    \"\"\"\n    \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u0430.\n\n    Attributes:\n        response: \u041e\u0442\u0432\u0435\u0442 API Yandex Pay.\n        check_data_availability: \u0424\u043b\u0430\u0433, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435\n            \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `data` \u0432 \u043e\u0442\u0432\u0435\u0442\u0435.\n\n    Returns:\n        \u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 API.\n\n    Raises:\n        requests.exceptions.HTTPError: HTTP Errors.\n        dd_yandex_pay.exceptions.YandexPayAPIError: API Errors.\n    \"\"\"\n\n    response.raise_for_status()\n    response_data = response.json()\n\n    if response_data.get(\"status\", \"\") != \"success\":\n        msg = response_data.get(\"reason\", \"Unknown error\")\n        code = response_data.get(\"reasonCode\", \"unknown_error\")\n        raise YandexPayAPIError(response, msg, code)\n\n    if check_data_availability and \"data\" not in response_data:\n        msg = \"Response has no data.\"\n        code = \"has_no_data\"\n        raise YandexPayAPIError(response, msg, code)\n\n    return response_data\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient.create_order","title":"create_order","text":"<pre><code>create_order(\n    cart: dict,\n    currencyCode: str,\n    orderId: str,\n    redirectUrls: dict,\n    availablePaymentMethods: Optional[List[str]] = None,\n    extensions: Optional[dict] = None,\n    ttl: Optional[int] = None,\n    **kwargs: dict\n) -&gt; dict\n</code></pre> <p>\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 \u0437\u0430\u043a\u0430\u0437\u0430.</p> <p>\u041f\u043e\u0434\u0431\u0440\u043e\u043d\u0435\u0435 \u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043e\u0442\u0432\u0435\u0442\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u044f\u043d\u0434\u0435\u043a\u0441\u0430.</p> <p>Attributes:</p> <ul> <li> <code>cart</code>         \u2013          <p>\u041a\u043e\u0440\u0437\u0438\u043d\u0430.</p> </li> <li> <code>currencyCode</code>         \u2013          <p>\u0422\u0440\u0435\u0445\u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b \u0437\u0430\u043a\u0430\u0437\u0430 (ISO 4217).</p> </li> <li> <code>orderId</code>         \u2013          <p>\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u0430.</p> </li> <li> <code>redirectUrls</code>         \u2013          <p>\u0421\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0430\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0444\u043e\u0440\u043c\u044b \u043e\u043f\u043b\u0430\u0442\u044b.</p> </li> <li> <code>availablePaymentMethods</code>         \u2013          <p>\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043e\u043f\u043b\u0430\u0442\u044b \u043d\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u042f\u043d\u0434\u0435\u043a\u0441 \u041f\u044d\u0439.</p> </li> <li> <code>extensions</code>         \u2013          <p>\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0444\u0444\u043b\u0430\u0439\u043d \u0437\u0430\u043a\u0430\u0437\u0430.</p> </li> <li> <code>ttl</code>         \u2013          <p>\u0412\u0440\u0435\u043c\u044f \u0436\u0438\u0437\u043d\u0438 \u0437\u0430\u043a\u0430\u0437\u0430 (\u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445).</p> </li> <li> <code>kwargs</code>         \u2013          <p>\u041f\u0440\u043e\u0447\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 request \u043a\u0440\u043e\u043c\u0435 method, url \u0438 json.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dict</code>         \u2013          <p>\u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b.</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>HTTPError</code>           \u2013          <p>HTTP Errors.</p> </li> <li> <code>YandexPayAPIError</code>           \u2013          <p>API Errors.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def create_order(\n    self,\n    cart: dict,\n    currencyCode: str,\n    orderId: str,\n    redirectUrls: dict,\n    availablePaymentMethods: Optional[List[str]] = None,\n    extensions: Optional[dict] = None,\n    ttl: Optional[int] = None,\n    **kwargs: dict,\n) -&gt; dict:\n    \"\"\"\n    \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 \u0437\u0430\u043a\u0430\u0437\u0430.\n\n    \u041f\u043e\u0434\u0431\u0440\u043e\u043d\u0435\u0435 \u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043e\u0442\u0432\u0435\u0442\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 [\u044f\u043d\u0434\u0435\u043a\u0441\u0430](https://pay.yandex.ru/ru/docs/custom/backend/yandex-pay-api/order/merchant_v1_orders-post).\n\n    Attributes:\n        cart: [\u041a\u043e\u0440\u0437\u0438\u043d\u0430](https://pay.yandex.ru/ru/docs/custom/backend/yandex-pay-api/order/merchant_v1_orders-post#renderedcart).\n        currencyCode: \u0422\u0440\u0435\u0445\u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b \u0437\u0430\u043a\u0430\u0437\u0430 (ISO 4217).\n        orderId: \u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u0430.\n        redirectUrls: [\u0421\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0430\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u0438](https://pay.yandex.ru/ru/docs/custom/backend/yandex-pay-api/order/merchant_v1_orders-post#merchantredirecturls)\n            \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0444\u043e\u0440\u043c\u044b \u043e\u043f\u043b\u0430\u0442\u044b.\n        availablePaymentMethods: \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043e\u043f\u043b\u0430\u0442\u044b \u043d\u0430 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u042f\u043d\u0434\u0435\u043a\u0441 \u041f\u044d\u0439.\n        extensions: [\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b](https://pay.yandex.ru/ru/docs/custom/backend/yandex-pay-api/order/merchant_v1_orders-post#orderextensions)\n            \u0434\u043b\u044f \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0444\u0444\u043b\u0430\u0439\u043d \u0437\u0430\u043a\u0430\u0437\u0430.\n        ttl: \u0412\u0440\u0435\u043c\u044f \u0436\u0438\u0437\u043d\u0438 \u0437\u0430\u043a\u0430\u0437\u0430 (\u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u0445).\n        kwargs: \u041f\u0440\u043e\u0447\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 [request][requests.request] \u043a\u0440\u043e\u043c\u0435 method,\n            url \u0438 json.\n\n    Returns:\n        \u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b.\n\n    Raises:\n        requests.exceptions.HTTPError: HTTP Errors.\n        dd_yandex_pay.exceptions.YandexPayAPIError: API Errors.\n    \"\"\"\n\n    json = {\n        \"cart\": cart,\n        \"currencyCode\": currencyCode,\n        \"orderId\": orderId,\n        \"redirectUrls\": redirectUrls,\n    }\n\n    if availablePaymentMethods:\n        json[\"availablePaymentMethods\"] = availablePaymentMethods\n\n    if extensions:\n        json[\"extensions\"] = extensions\n\n    if ttl:\n        json[\"ttl\"] = ttl\n\n    response = self.request(\n        \"POST\",\n        self.get_url(self.RESOURCE_ORDER_CREATE),\n        json=json,\n        **kwargs,\n    )\n\n    response_data = self.response_handler(response, True)\n    return response_data[\"data\"]\n</code></pre>"},{"location":"reference/dd_yandex_pay/yp_client/#dd_yandex_pay.yp_client.YandexPayClient.get_order","title":"get_order","text":"<pre><code>get_order(order_id: str, **kwargs: dict) -&gt; dict\n</code></pre> <p>\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0437\u0430\u043a\u0430\u0437\u0430.</p> <p>\u041f\u043e\u0434\u0431\u0440\u043e\u043d\u0435\u0435 \u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043e\u0442\u0432\u0435\u0442\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u044f\u043d\u0434\u0435\u043a\u0441\u0430.</p> <p>Attributes:</p> <ul> <li> <code>order_id</code>         \u2013          <p>\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u0430.</p> </li> <li> <code>kwargs</code>         \u2013          <p>\u041f\u0440\u043e\u0447\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 request \u043a\u0440\u043e\u043c\u0435 method, url \u0438 json.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dict</code>         \u2013          <p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043a\u0430\u0437\u0430.</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>HTTPError</code>           \u2013          <p>HTTP Errors.</p> </li> <li> <code>YandexPayAPIError</code>           \u2013          <p>API Errors.</p> </li> </ul> Source code in <code>dd_yandex_pay/yp_client.py</code> <pre><code>def get_order(self, order_id: str, **kwargs: dict) -&gt; dict:\n    \"\"\"\n    \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0437\u0430\u043a\u0430\u0437\u0430.\n\n    \u041f\u043e\u0434\u0431\u0440\u043e\u043d\u0435\u0435 \u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043e\u0442\u0432\u0435\u0442\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 [\u044f\u043d\u0434\u0435\u043a\u0441\u0430](https://pay.yandex.ru/ru/docs/custom/backend/yandex-pay-api/order/merchant_v1_order-get).\n\n    Attributes:\n        order_id: \u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u0430.\n        kwargs: \u041f\u0440\u043e\u0447\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 [request][requests.request] \u043a\u0440\u043e\u043c\u0435 method,\n            url \u0438 json.\n\n    Returns:\n        \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043a\u0430\u0437\u0430.\n\n    Raises:\n        requests.exceptions.HTTPError: HTTP Errors.\n        dd_yandex_pay.exceptions.YandexPayAPIError: API Errors.\n    \"\"\"\n\n    response = self.request(\n        \"GET\",\n        self.get_url(self.RESOURCE_ORDER_DETAILS.format(id=order_id)),\n        **kwargs,\n    )\n\n    response_data = self.response_handler(response, True)\n    return response_data[\"data\"]\n</code></pre>"},{"location":"usage/client/","title":"YandexPayClient","text":"<p>\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c api-\u043a\u043b\u044e\u0447:</p> <pre><code>&gt;&gt;&gt; from dd_yandex_pay import YandexPayClient\n&gt;&gt;&gt; yp_client = YandexPayClient(\"api-key\", base_url=\"https://sandbox.pay.yandex.ru/api/merchant/\")\n</code></pre> <p>\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0443\u0440\u043b \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d \u043d\u0430 \u0431\u043e\u0435\u0432\u043e\u0435 API.</p> <p>\u0422\u0430\u043a \u0436\u0435 \u0432 \u043a\u043b\u0438\u0435\u043d\u0442 \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.</p> <p>Note</p> <p>\u0422\u0430\u043a \u0436\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0447\u0442\u043e \u0432\u0441\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043d\u0435 \u0432\u0435\u0441\u044c \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u043e\u0442\u0432\u0435\u0442\u0430, \u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043b\u0438\u0448\u044c \u043e\u0431\u044a\u0435\u043a\u0442 <code>data</code> \u0438\u0437 \u043e\u0442\u0432\u0435\u0442\u0430. \u0422\u0430\u043a \u043a\u0430\u043a \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0438 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u0440\u0430\u0432\u043d\u0430 \u043e\u0434\u043d\u0438\u043c \u0438 \u0442\u0435\u043c \u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u043c, \u044d\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u043e \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u0430\u043a\u0438\u0445 \u043b\u0438\u0431\u043e \u043e\u0448\u0438\u0431\u043e\u043a, \u0437\u0430\u043f\u0440\u043e\u0441 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u043f\u043e\u043b\u0443 <code>response</code> \u0432 \u043e\u0448\u0438\u0431\u043a\u0435.</p>"},{"location":"usage/client/#creating-order-aka-payment-link","title":"Creating order aka payment link","text":"<p>\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 \u0435\u0441\u0442\u044c \u043c\u0435\u0442\u043e\u0434 create_order.</p> <pre><code>&gt;&gt;&gt; cart = {\n...     \"externalId\": \"test_1\",\n...     \"items\": [\n...         {\n...             \"productId\": \"test\",\n...             \"quantity\": {\n...                 \"count\": \"2\",\n...                 \"label\": \"\u0448\u0442\",\n...             },\n...             \"title\": \"\u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0442\u043e\u0432\u0430\u0440\",\n...             \"unitPrice\": \"100.00\",\n...             \"subtotal\": \"200.00\",\n...             \"discountedUnitPrice\": \"90.00\",\n...             \"total\": \"180.00\",\n...         }\n...     ],\n...     \"total\": {\n...         \"amount\": \"180.00\",\n...     },\n... }\n&gt;&gt;&gt; response_data = yp_client.create_order(\n...     cart=cart,\n...     currencyCode=\"RUB\",\n...     orderId=\"test #1/1\",\n...     redirectUrls={\n...         \"onError\": \"https://127.0.0.1/error\",\n...         \"onSuccess\": \"https://127.0.0.1/success\",\n...     },\n... )\n&gt;&gt;&gt; print(response_data)\n{'paymentUrl': 'https://sandbox.pay.ya.ru/a/bcdefg'}\n</code></pre> <p>Info</p> <p>\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0438\u0442\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e Yandex Pay API \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u0447\u0442\u043e \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0442\u0435\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 status \u0438 code, \u0430 http \u043a\u043e\u0434 \u0432\u0441\u0435\u0433\u0434\u0430 200 \u0438 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0440\u0430\u0436\u0430\u0442\u044c \u0441\u0435\u0442\u0435\u0432\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043d\u043e \u043d\u0430 \u0434\u0435\u043b\u0435, \u044d\u0442\u043e \u043d\u0435 \u0442\u0430\u043a, \u0435\u0441\u043b\u0438 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u0437\u0430\u0432\u0435\u0434\u043e\u043c\u043e \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c \u043a\u043b\u044e\u0447\u043e\u043c, \u0432\u0435\u0440\u043d\u0451\u0442\u0441\u044f 401 \u043e\u0448\u0438\u0431\u043a\u0430, \u0430 \u0432 \u0442\u0435\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435:</p> <pre><code>{\n\t\"status\": \"fail\",\n\t\"reasonCode\": \"AUTHENTICATION_ERROR\",\n\t\"reason\": \"Malformed API key\"\n}\n</code></pre> <p>\u0430 \u0435\u0441\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 \u0441 \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0434\u043e\u043c 400 \u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c \u0432 \u0442\u0435\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430:</p> <pre><code>{\n\t\"status\": \"fail\",\n\t\"reasonCode\": \"ORDER_AMOUNT_MISMATCH\",\n\t\"reason\": \"Cart total amount mismatch: expected `cart_total` = `items_sum` - `discounts_sum`, but found 0.00 != 180.00 - 0.00\",\n\t\"details\": {\n\t\t\"cart_total\": \"0.00\",\n\t\t\"items_sum\": \"180.00\",\n\t\t\"discounts_sum\": \"0.00\",\n\t\t\"description\": \"Cart total amount mismatch: expected `cart_total` = `items_sum` - `discounts_sum`, but found 0.00 != 180.00 - 0.00\"\n\t}\n}\n</code></pre>"},{"location":"usage/client/#receving-order-details","title":"Receving order details","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043a\u0430\u0437\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 get_order:</p> <pre><code>&gt;&gt;&gt; response_data = yp_client.get_order(\"test_1\")\n&gt;&gt;&gt; print(response_data)\n{\n    \"delivery\": {},\n    \"operations\": [],\n    \"order\": {},\n}\n</code></pre>"},{"location":"usage/getting_started/","title":"Getting started","text":""},{"location":"usage/getting_started/#installation","title":"Installation","text":"<p>\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0434\u043b\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0438\u0437 pypi, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u0430:</p> <pre><code>$ pip install dd_yandex_pay\n$ python\nPython 3.11.4 (main, Jul 24 2023, 00:43:11) [GCC 11.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; dd_yandex_pay.__version__\n'0.1.0'\n</code></pre>"},{"location":"usage/getting_started/#lets-start","title":"Let's start","text":"<p>\u0414\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 Yandex Pay API \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0432 \u0432\u0438\u0434\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 YandexPayClient \u0441 \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0438\u0437 \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 API:</p> <ul> <li>create_order</li> <li>get_order</li> <li>cancel_order</li> <li>refund_order</li> <li>refund_order_v2</li> <li>capture_order</li> <li>get_operations</li> </ul> <p>Note</p> <p>\u0414\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0430\u043f\u0438 \u0432\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u044c\u0441\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c API-\u043a\u043b\u044e\u0447 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 Yandex Pay API, \u043e \u0442\u043e\u043c \u043a\u0430\u043a \u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u043e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 Yandex Pay.</p>"}]}